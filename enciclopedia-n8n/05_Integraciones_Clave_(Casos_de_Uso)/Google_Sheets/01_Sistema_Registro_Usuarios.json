{
  "name": "üìä Sistema de Registro de Usuarios con Google Sheets",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "registro-usuario",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "üéØ Webhook - Registro",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        200,
        300
      ],
      "id": "webhook-registro"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "nombre",
              "value": "={{ $json.nombre ? $json.nombre.toString().trim() : '' }}"
            },
            {
              "name": "email",
              "value": "={{ $json.email ? $json.email.toString().toLowerCase().trim() : '' }}"
            },
            {
              "name": "telefono",
              "value": "={{ $json.telefono ? $json.telefono.toString().trim() : '' }}"
            },
            {
              "name": "empresa",
              "value": "={{ $json.empresa ? $json.empresa.toString().trim() : 'No especificada' }}"
            },
            {
              "name": "fecha_registro",
              "value": "={{ new Date().toISOString().split('T')[0] }}"
            },
            {
              "name": "hora_registro",
              "value": "={{ new Date().toLocaleTimeString('es-ES') }}"
            },
            {
              "name": "timestamp",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "name": "üîÑ Limpiar Datos",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        400,
        300
      ],
      "id": "limpiar-datos"
    },
    {
      "parameters": {
        "jsCode": "// Validar datos de entrada\nconst datos = $json;\nconst errores = [];\n\n// Validar nombre\nif (!datos.nombre || datos.nombre.length < 2) {\n  errores.push('Nombre debe tener al menos 2 caracteres');\n}\n\n// Validar email\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\nif (!datos.email || !emailRegex.test(datos.email)) {\n  errores.push('Email inv√°lido');\n}\n\n// Validar tel√©fono\nif (!datos.telefono || datos.telefono.length < 10) {\n  errores.push('Tel√©fono debe tener al menos 10 d√≠gitos');\n}\n\n// Verificar si hay errores\nif (errores.length > 0) {\n  return {\n    json: {\n      valido: false,\n      errores: errores,\n      mensaje: 'Datos inv√°lidos: ' + errores.join(', ')\n    }\n  };\n}\n\n// Si todo est√° bien\nreturn {\n  json: {\n    ...datos,\n    valido: true,\n    id_usuario: 'USER_' + Date.now(),\n    estado: 'Activo'\n  }\n};"
      },
      "name": "‚úÖ Validar Datos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        600,
        300
      ],
      "id": "validar-datos"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.valido }}",
              "value2": true
            }
          ]
        }
      },
      "name": "üéØ ¬øDatos V√°lidos?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        800,
        300
      ],
      "id": "check-validos"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "append",
        "documentId": "1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms",
        "sheetName": "Usuarios",
        "range": "A:H",
        "options": {
          "valueInputMode": "USER_ENTERED"
        }
      },
      "name": "üìä Guardar en Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [
        1000,
        200
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "google-sheets-creds",
          "name": "Google Sheets - Producci√≥n"
        }
      },
      "id": "guardar-sheets"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "email_destino",
              "value": "={{ $json.email }}"
            },
            {
              "name": "asunto",
              "value": "¬°Bienvenido {{ $json.nombre }}!"
            },
            {
              "name": "mensaje",
              "value": "Hola {{ $json.nombre }},\\n\\nGracias por registrarte en nuestro sistema.\\n\\nTus datos han sido guardados correctamente:\\n- Email: {{ $json.email }}\\n- Tel√©fono: {{ $json.telefono }}\\n- Empresa: {{ $json.empresa }}\\n- Fecha de registro: {{ $json.fecha_registro }}\\n\\n¬°Esperamos verte pronto!\\n\\nSaludos,\\nEl equipo"
            }
          ]
        },
        "options": {}
      },
      "name": "üìß Preparar Email Bienvenida",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1200,
        200
      ],
      "id": "preparar-email"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": true,\n  \"message\": \"Usuario registrado exitosamente\",\n  \"data\": {\n    \"id_usuario\": $json.id_usuario,\n    \"nombre\": $json.nombre,\n    \"email\": $json.email,\n    \"fecha_registro\": $json.fecha_registro\n  }\n} }}"
      },
      "name": "‚úÖ Respuesta Exitosa",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1400,
        200
      ],
      "id": "respuesta-exitosa"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": false,\n  \"message\": $json.mensaje,\n  \"errors\": $json.errores\n} }}",
        "responseCode": 400
      },
      "name": "‚ùå Respuesta Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "id": "respuesta-error"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "admin_email",
              "value": "admin@empresa.com"
            },
            {
              "name": "asunto",
              "value": "Error en Registro de Usuario"
            },
            {
              "name": "mensaje",
              "value": "Se intent√≥ registrar un usuario con datos inv√°lidos:\\n\\nErrores encontrados:\\n{{ $json.errores.join('\\n- ') }}\\n\\nDatos recibidos:\\n{{ JSON.stringify($json, null, 2) }}\\n\\nFecha: {{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "name": "üö® Notificar Error Admin",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1200,
        400
      ],
      "id": "notificar-error"
    }
  ],
  "connections": {
    "üéØ Webhook - Registro": {
      "main": [
        [
          {
            "node": "üîÑ Limpiar Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÑ Limpiar Datos": {
      "main": [
        [
          {
            "node": "‚úÖ Validar Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Validar Datos": {
      "main": [
        [
          {
            "node": "üéØ ¬øDatos V√°lidos?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üéØ ¬øDatos V√°lidos?": {
      "main": [
        [
          {
            "node": "üìä Guardar en Google Sheets",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚ùå Respuesta Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä Guardar en Google Sheets": {
      "main": [
        [
          {
            "node": "üìß Preparar Email Bienvenida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìß Preparar Email Bienvenida": {
      "main": [
        [
          {
            "node": "‚úÖ Respuesta Exitosa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùå Respuesta Error": {
      "main": [
        [
          {
            "node": "üö® Notificar Error Admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}
