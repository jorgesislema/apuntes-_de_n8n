{
  "name": "02_Transformando_Data_con_Set",
  "nodes": [
    {
      "parameters": {},
      "id": "start",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 300],
      "notes": "Iniciamos con datos de ejemplo para demostrar las capacidades del nodo Set"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "nombre_cliente",
              "value": "Juan Pérez González"
            },
            {
              "name": "email_cliente",
              "value": "JUAN.PEREZ@EMPRESA.COM"
            },
            {
              "name": "telefono_raw",
              "value": "34-666-123-456"
            },
            {
              "name": "fecha_registro",
              "value": "2024-01-15T08:30:00Z"
            }
          ],
          "number": [
            {
              "name": "edad",
              "value": 28
            },
            {
              "name": "compras_totales",
              "value": 1250.75
            }
          ]
        }
      },
      "id": "datos-originales",
      "name": "Datos Originales",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [460, 300],
      "notes": "Simulamos datos que vienen de un sistema externo con formato inconsistente"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "id_unico",
              "value": "=CLI-{{ Date.now() }}-{{ Math.random().toString(36).substr(2, 9) }}"
            },
            {
              "name": "nombre_normalizado",
              "value": "={{ $json.nombre_cliente.trim().toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') }}"
            },
            {
              "name": "email_normalizado",
              "value": "={{ $json.email_cliente.toLowerCase().trim() }}"
            },
            {
              "name": "telefono_limpio",
              "value": "={{ $json.telefono_raw.replace(/[^0-9]/g, '') }}"
            },
            {
              "name": "fecha_formateada",
              "value": "={{ new Date($json.fecha_registro).toLocaleDateString('es-ES') }}"
            },
            {
              "name": "mes_registro",
              "value": "={{ new Date($json.fecha_registro).toLocaleDateString('es-ES', { month: 'long' }) }}"
            },
            {
              "name": "año_registro",
              "value": "={{ new Date($json.fecha_registro).getFullYear() }}"
            }
          ],
          "number": [
            {
              "name": "edad_en_meses",
              "value": "={{ $json.edad * 12 }}"
            },
            {
              "name": "compras_redondeadas",
              "value": "={{ Math.round($json.compras_totales) }}"
            },
            {
              "name": "descuento_por_edad",
              "value": "={{ $json.edad >= 65 ? 0.15 : $json.edad < 25 ? 0.05 : 0.10 }}"
            }
          ],
          "boolean": [
            {
              "name": "es_cliente_premium",
              "value": "={{ $json.compras_totales > 1000 }}"
            },
            {
              "name": "email_valido",
              "value": "={{ /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test($json.email_cliente.toLowerCase()) }}"
            },
            {
              "name": "registro_reciente",
              "value": "={{ (Date.now() - new Date($json.fecha_registro).getTime()) / (1000 * 60 * 60 * 24) < 30 }}"
            }
          ]
        }
      },
      "id": "transformacion-basica",
      "name": "Transformación Básica",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [680, 300],
      "notes": "Aplicamos transformaciones básicas: normalización, limpieza, formateo y cálculos simples"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "categoria_cliente",
              "value": "={{ $json.es_cliente_premium ? 'Premium' : 'Estándar' }}"
            },
            {
              "name": "segmento_edad",
              "value": "={{ $json.edad < 25 ? 'Joven' : $json.edad < 40 ? 'Adulto Joven' : $json.edad < 60 ? 'Adulto' : 'Senior' }}"
            },
            {
              "name": "mensaje_personalizado",
              "value": "=¡Hola {{ $json.nombre_normalizado }}! Como cliente {{ $json.categoria_cliente.toLowerCase() }} del segmento {{ $json.segmento_edad }}, tienes un {{ ($json.descuento_por_edad * 100).toFixed(0) }}% de descuento."
            },
            {
              "name": "codigo_promocional",
              "value": "={{ $json.categoria_cliente.substring(0,3).toUpperCase() + $json.año_registro + ($json.descuento_por_edad * 100).toFixed(0) }}"
            }
          ],
          "number": [
            {
              "name": "puntos_fidelidad",
              "value": "={{ Math.floor($json.compras_redondeadas / 10) + ($json.es_cliente_premium ? 100 : 50) }}"
            },
            {
              "name": "limite_credito_sugerido",
              "value": "={{ $json.compras_totales * (1 + $json.descuento_por_edad) * 2 }}"
            }
          ]
        }
      },
      "id": "logica-negocio",
      "name": "Lógica de Negocio",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [900, 300],
      "notes": "Aplicamos reglas de negocio complejas usando los datos transformados anteriormente"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "resumen_cliente",
              "value": "=Cliente: {{ $json.nombre_normalizado }} | Email: {{ $json.email_normalizado }} | Teléfono: {{ $json.telefono_limpio }} | Categoría: {{ $json.categoria_cliente }} | Puntos: {{ $json.puntos_fidelidad }}"
            },
            {
              "name": "timestamp_procesamiento",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {
          "includeOtherFields": true
        }
      },
      "id": "resultado-final",
      "name": "Resultado Final",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1120, 300],
      "notes": "Creamos un resumen final manteniendo todos los campos anteriores (includeOtherFields: true)"
    },
    {
      "parameters": {},
      "id": "start-arrays",
      "name": "Start - Arrays",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 600],
      "notes": "Segundo ejemplo: Trabajando con arrays y objetos complejos"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "pedido_id",
              "value": "PED-2024-001"
            },
            {
              "name": "productos_json",
              "value": "[{\"nombre\":\"Laptop\",\"precio\":899.99,\"cantidad\":1},{\"nombre\":\"Mouse\",\"precio\":25.50,\"cantidad\":2},{\"nombre\":\"Teclado\",\"precio\":75.00,\"cantidad\":1}]"
            },
            {
              "name": "cliente_json",
              "value": "{\"nombre\":\"María García\",\"email\":\"maria@email.com\",\"direccion\":{\"calle\":\"Main St 123\",\"ciudad\":\"Madrid\",\"cp\":\"28001\"}}"
            }
          ]
        }
      },
      "id": "datos-complejos",
      "name": "Datos Complejos",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [460, 600],
      "notes": "Datos con JSON strings que necesitan ser parseados y procesados"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "productos_formateados",
              "value": "={{ JSON.parse($json.productos_json).map(p => `${p.cantidad}x ${p.nombre} - €${p.precio}`).join(', ') }}"
            },
            {
              "name": "cliente_nombre",
              "value": "={{ JSON.parse($json.cliente_json).nombre }}"
            },
            {
              "name": "cliente_email",
              "value": "={{ JSON.parse($json.cliente_json).email }}"
            },
            {
              "name": "direccion_completa",
              "value": "={{ JSON.parse($json.cliente_json).direccion.calle + ', ' + JSON.parse($json.cliente_json).direccion.ciudad + ' ' + JSON.parse($json.cliente_json).direccion.cp }}"
            }
          ],
          "number": [
            {
              "name": "total_productos",
              "value": "={{ JSON.parse($json.productos_json).length }}"
            },
            {
              "name": "cantidad_total",
              "value": "={{ JSON.parse($json.productos_json).reduce((sum, item) => sum + item.cantidad, 0) }}"
            },
            {
              "name": "precio_total",
              "value": "={{ JSON.parse($json.productos_json).reduce((sum, item) => sum + (item.precio * item.cantidad), 0) }}"
            },
            {
              "name": "precio_promedio",
              "value": "={{ JSON.parse($json.productos_json).reduce((sum, item) => sum + item.precio, 0) / JSON.parse($json.productos_json).length }}"
            }
          ]
        }
      },
      "id": "procesamiento-arrays",
      "name": "Procesamiento de Arrays",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [680, 600],
      "notes": "Parseamos JSON strings y aplicamos operaciones avanzadas como map, reduce y filter"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "factura_formateada",
              "value": "=FACTURA {{ $json.pedido_id }}\\n\\nCliente: {{ $json.cliente_nombre }}\\nEmail: {{ $json.cliente_email }}\\nDirección: {{ $json.direccion_completa }}\\n\\nProductos:\\n{{ $json.productos_formateados }}\\n\\nTotal: €{{ $json.precio_total.toFixed(2) }}\\nPromedio por producto: €{{ $json.precio_promedio.toFixed(2) }}"
            },
            {
              "name": "productos_caros",
              "value": "={{ JSON.parse($json.productos_json).filter(p => p.precio > 50).map(p => p.nombre).join(', ') || 'Ninguno' }}"
            },
            {
              "name": "categoria_pedido",
              "value": "={{ $json.precio_total > 500 ? 'Grande' : $json.precio_total > 100 ? 'Mediano' : 'Pequeño' }}"
            }
          ]
        }
      },
      "id": "formato-final",
      "name": "Formato Final",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [900, 600],
      "notes": "Creamos un formato de salida legible y aplicamos filtros avanzados a los arrays"
    },
    {
      "parameters": {},
      "id": "start-condiciones",
      "name": "Start - Condiciones",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 900],
      "notes": "Tercer ejemplo: Condiciones complejas y validaciones"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "nombre",
              "value": "  Ana Martínez  "
            },
            {
              "name": "email",
              "value": "ana.martinez@empresa.com"
            },
            {
              "name": "telefono",
              "value": "+34 612 345 678"
            },
            {
              "name": "fecha_nacimiento",
              "value": "1995-03-15"
            },
            {
              "name": "profesion",
              "value": "desarrolladora"
            }
          ],
          "number": [
            {
              "name": "salario",
              "value": 45000
            },
            {
              "name": "años_experiencia",
              "value": 5
            }
          ]
        }
      },
      "id": "datos-validacion",
      "name": "Datos para Validación",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [460, 900],
      "notes": "Datos que requieren validación y limpieza antes de procesamiento"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "nombre_limpio",
              "value": "={{ $json.nombre ? $json.nombre.trim() : '' }}"
            },
            {
              "name": "estado_email",
              "value": "={{ /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test($json.email || '') ? 'válido' : 'inválido' }}"
            },
            {
              "name": "telefono_formato",
              "value": "={{ ($json.telefono || '').replace(/\\s+/g, '').replace(/[^+0-9]/g, '') }}"
            },
            {
              "name": "edad_calculada",
              "value": "={{ $json.fecha_nacimiento ? Math.floor((Date.now() - new Date($json.fecha_nacimiento).getTime()) / (365.25 * 24 * 60 * 60 * 1000)) : 0 }}"
            },
            {
              "name": "nivel_profesional",
              "value": "={{ $json.años_experiencia >= 10 ? 'Senior' : $json.años_experiencia >= 5 ? 'Semi-Senior' : $json.años_experiencia >= 2 ? 'Junior' : 'Trainee' }}"
            }
          ],
          "number": [
            {
              "name": "salario_mensual",
              "value": "={{ ($json.salario || 0) / 12 }}"
            },
            {
              "name": "puntuacion_candidato",
              "value": "={{ ($json.años_experiencia * 10) + (($json.salario || 0) / 1000) + (/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test($json.email || '') ? 20 : 0) }}"
            }
          ],
          "boolean": [
            {
              "name": "datos_completos",
              "value": "={{ Boolean($json.nombre && $json.email && $json.telefono && $json.fecha_nacimiento && $json.profesion) }}"
            },
            {
              "name": "apto_senior",
              "value": "={{ $json.años_experiencia >= 5 && ($json.salario || 0) >= 40000 }}"
            },
            {
              "name": "contacto_valido",
              "value": "={{ /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test($json.email || '') && ($json.telefono || '').length >= 9 }}"
            }
          ]
        }
      },
      "id": "validaciones-avanzadas",
      "name": "Validaciones Avanzadas",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [680, 900],
      "notes": "Aplicamos validaciones complejas, cálculos condicionales y verificaciones de integridad de datos"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "resultado_validacion",
              "value": "={{ $json.datos_completos ? 'APROBADO' : 'RECHAZADO - Datos incompletos' }}"
            },
            {
              "name": "observaciones",
              "value": "=Candidato {{ $json.nombre_limpio }} - {{ $json.nivel_profesional }} | Email: {{ $json.estado_email }} | Puntuación: {{ $json.puntuacion_candidato.toFixed(1) }} | {{ $json.apto_senior ? 'Apto para posición senior' : 'No apto para posición senior' }}"
            },
            {
              "name": "acciones_requeridas",
              "value": "={{ !$json.contacto_valido ? 'Verificar datos de contacto. ' : '' }}{{ !$json.datos_completos ? 'Completar información faltante. ' : '' }}{{ $json.puntuacion_candidato < 50 ? 'Revisar experiencia y salario. ' : 'Candidato bien calificado.' }}"
            }
          ]
        },
        "options": {
          "includeOtherFields": true
        }
      },
      "id": "decision-final",
      "name": "Decisión Final",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [900, 900],
      "notes": "Generamos decisiones automáticas basadas en las validaciones y creamos reportes de acción"
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Datos Originales",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Datos Originales": {
      "main": [
        [
          {
            "node": "Transformación Básica",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformación Básica": {
      "main": [
        [
          {
            "node": "Lógica de Negocio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lógica de Negocio": {
      "main": [
        [
          {
            "node": "Resultado Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start - Arrays": {
      "main": [
        [
          {
            "node": "Datos Complejos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Datos Complejos": {
      "main": [
        [
          {
            "node": "Procesamiento de Arrays",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesamiento de Arrays": {
      "main": [
        [
          {
            "node": "Formato Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start - Condiciones": {
      "main": [
        [
          {
            "node": "Datos para Validación",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Datos para Validación": {
      "main": [
        [
          {
            "node": "Validaciones Avanzadas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validaciones Avanzadas": {
      "main": [
        [
          {
            "node": "Decisión Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
